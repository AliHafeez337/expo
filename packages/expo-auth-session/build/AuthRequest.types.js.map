{"version":3,"file":"AuthRequest.types.js","sourceRoot":"","sources":["../src/AuthRequest.types.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC7B,oCAAa,CAAA;IACb,sCAAe,CAAA;AACjB,CAAC,EAHW,mBAAmB,KAAnB,mBAAmB,QAG9B;AAED;;;;;GAKG;AACH,MAAM,CAAN,IAAY,YASX;AATD,WAAY,YAAY;IACtB;;OAEG;IACH,6BAAa,CAAA;IACb;;OAEG;IACH,+BAAe,CAAA;AACjB,CAAC,EATW,YAAY,KAAZ,YAAY,QASvB","sourcesContent":["export enum CodeChallengeMethod {\n  S256 = 'S256',\n  Plain = 'plain',\n}\n\n/**\n * The client informs the authorization server of the\n * desired grant type by using the a response type.\n *\n * https://tools.ietf.org/html/rfc6749#section-3.1.1\n */\nexport enum ResponseType {\n  /**\n   * For requesting an authorization code as described by [Section 4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1).\n   */\n  Code = 'code',\n  /**\n   * for requesting an access token (implicit grant) as described by [Section 4.2.1](https://tools.ietf.org/html/rfc6749#section-4.2.1).\n   */\n  Token = 'token',\n}\n\nexport type AuthRequestPromptOptions = {\n  url?: string;\n  useProxy?: boolean;\n  showInRecents?: boolean;\n};\n\nexport interface AuthRequestConfig {\n  responseType: ResponseType;\n  clientId: string;\n  /**\n   * https://tools.ietf.org/html/rfc6749#section-3.1.2\n   */\n  redirectUri: string;\n  scopes: string[];\n  clientSecret?: string;\n  codeChallengeMethod: CodeChallengeMethod;\n  codeChallenge?: string;\n  state?: string;\n  extraParams?: Record<string, string>;\n  usePKCE?: boolean;\n}\n\nexport type AuthResult = {\n  code: string;\n  state: string;\n};\n"]}