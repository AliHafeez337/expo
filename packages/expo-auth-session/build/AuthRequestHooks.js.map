{"version":3,"file":"AuthRequestHooks.js","sourceRoot":"","sources":["../src/AuthRequestHooks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE5C,OAAO,EAAE,WAAW,EAAqB,MAAM,eAAe,CAAC;AAC/D,OAAO,EAAgC,qBAAqB,EAAE,MAAM,aAAa,CAAC;AAClF,OAAO,EAAW,YAAY,EAAE,MAAM,SAAS,CAAC;AAEhD,MAAM,UAAU,YAAY,CAAC,iBAAoC;IAC/D,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAmB,IAAI,CAAC,CAAC;IAEnE,SAAS,CAAC,GAAG,EAAE;QACb,qBAAqB,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YACxD,YAAY,CAAC,SAAS,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAExB,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,UAAU,mBAAmB,CACjC,WAAmB,EACnB,UAAkB,EAClB,OAAgB,EAChB,SAAiB,KAAK;IAEtB,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAW,IAAI,CAAC,CAAC;IACjD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAe,IAAI,CAAC,CAAC;IAEvD,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,WAAW,EAAE;YACf,YAAY,CAAI,UAAU,EAAE;gBAC1B,aAAa;gBACb,OAAO,EAAE;oBACP,cAAc,EAAE,mCAAmC;oBACnD,GAAG,OAAO;iBACX;gBACD,MAAM;gBACN,QAAQ,EAAE,MAAM;aACjB,CAAC;iBACC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACX,OAAO,CAAC,IAAI,CAAC,CAAC;gBACd,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC,CAAC;iBACD,KAAK,CAAC,KAAK,CAAC,EAAE;gBACb,OAAO,CAAC,IAAI,CAAC,CAAC;gBACd,QAAQ,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;SACN;IACH,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IAElB,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACvB,CAAC;AAED,MAAM,UAAU,cAAc,CAC5B,MAAyB,EACzB,SAA2B;IAE3B,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAqB,IAAI,CAAC,CAAC;IAEjE,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,MAAM,IAAI,SAAS,EAAE;YACvB,WAAW,CAAC,UAAU,CACpB;gBACE,GAAG,MAAM;aACV,EACD,SAAS,CACV,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;SACxC;IACH,CAAC,EAAE;QACD,SAAS,EAAE,qBAAqB;QAChC,MAAM,CAAC,QAAQ;QACf,MAAM,CAAC,WAAW;QAClB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QACvB,MAAM,CAAC,YAAY;QACnB,MAAM,CAAC,aAAa;QACpB,MAAM,CAAC,KAAK;QACZ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC;QACxC,MAAM,CAAC,OAAO;KACf,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { AuthRequest, AuthRequestConfig } from './AuthRequest';\nimport { Discovery, IssuerOrDiscovery, resolveDiscoveryAsync } from './Discovery';\nimport { Headers, requestAsync } from './Fetch';\n\nexport function useDiscovery(issuerOrDiscovery: IssuerOrDiscovery): Discovery | null {\n  const [discovery, setDiscovery] = useState<Discovery | null>(null);\n\n  useEffect(() => {\n    resolveDiscoveryAsync(issuerOrDiscovery).then(discovery => {\n      setDiscovery(discovery);\n    });\n  }, [issuerOrDiscovery]);\n\n  return discovery;\n}\n\nexport function useJsonFetchRequest<T>(\n  accessToken: string,\n  requestUrl: string,\n  headers: Headers,\n  method: string = 'GET'\n): [T | null, Error | null] {\n  const [json, setJson] = useState<T | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    if (accessToken) {\n      requestAsync<T>(requestUrl, {\n        // @ts-ignore\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          ...headers,\n        },\n        method,\n        dataType: 'json',\n      })\n        .then(json => {\n          setJson(json);\n          setError(null);\n        })\n        .catch(error => {\n          setJson(null);\n          setError(error);\n        });\n    }\n  }, [accessToken]);\n\n  return [json, error];\n}\n\nexport function useAuthRequest(\n  config: AuthRequestConfig,\n  discovery: Discovery | null\n): AuthRequest | null {\n  const [request, setRequest] = useState<AuthRequest | null>(null);\n\n  useEffect(() => {\n    if (config && discovery) {\n      AuthRequest.buildAsync(\n        {\n          ...config,\n        },\n        discovery\n      ).then(request => setRequest(request));\n    }\n  }, [\n    discovery?.authorizationEndpoint,\n    config.clientId,\n    config.redirectUri,\n    config.scopes.join(','),\n    config.clientSecret,\n    config.codeChallenge,\n    config.state,\n    JSON.stringify(config.extraParams || {}),\n    config.usePKCE,\n  ]);\n\n  return request;\n}\n"]}